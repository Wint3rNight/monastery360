# Generated by Django 4.2.5 on 2025-09-01 23:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Monastery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Official name of the monastery', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of the name', max_length=220, unique=True)),
                ('established_year', models.PositiveIntegerField(help_text='Year the monastery was established', validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(2024)])),
                ('description', models.TextField(help_text="Detailed description of the monastery's history and significance")),
                ('short_description', models.CharField(help_text='Brief description for cards and previews', max_length=500)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude coordinate', null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, help_text='Longitude coordinate', null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('address', models.TextField(help_text='Full address of the monastery')),
                ('district', models.CharField(help_text='District in Sikkim', max_length=100)),
                ('altitude', models.PositiveIntegerField(blank=True, help_text='Altitude in meters above sea level', null=True)),
                ('image', models.ImageField(help_text='Main image of the monastery', upload_to='monasteries/images/')),
                ('image_alt', models.CharField(help_text='Alt text for the main image (accessibility)', max_length=200)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Contact email address', max_length=254)),
                ('website', models.URLField(blank=True, help_text='Official website URL')),
                ('visiting_hours', models.CharField(default='6:00 AM - 6:00 PM', help_text='General visiting hours', max_length=200)),
                ('entry_fee', models.CharField(default='Free', help_text='Entry fee information', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the monastery is actively maintained')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether to feature this monastery on the homepage')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Monasteries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AudioPOI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of this point of interest', max_length=200)),
                ('description', models.TextField(help_text='Description of what visitors will learn about')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude coordinate of this POI', null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, help_text='Longitude coordinate of this POI', null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('audio_file', models.FileField(help_text='Audio file for this point of interest', upload_to='audio/pois/')),
                ('audio_duration', models.PositiveIntegerField(help_text='Duration of audio in seconds')),
                ('audio_transcript', models.TextField(blank=True, help_text='Text transcript of the audio (accessibility)')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within the monastery tour')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this POI is active in tours')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('monastery', models.ForeignKey(help_text='The monastery this POI belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='audio_pois', to='core.monastery')),
            ],
            options={
                'verbose_name': 'Audio Point of Interest',
                'verbose_name_plural': 'Audio Points of Interest',
                'ordering': ['monastery', 'order', 'title'],
            },
        ),
    ]
