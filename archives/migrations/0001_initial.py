# Generated by Django 4.2.5 on 2025-09-01 23:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title or name of the archive item', max_length=300)),
                ('description', models.TextField(help_text='Detailed description of the item and its significance')),
                ('item_type', models.CharField(choices=[('manuscript', 'Manuscript'), ('artifact', 'Artifact'), ('photograph', 'Photograph'), ('document', 'Document'), ('painting', 'Painting'), ('sculpture', 'Sculpture'), ('textile', 'Textile'), ('ritual_object', 'Ritual Object'), ('architectural', 'Architectural Element'), ('other', 'Other')], help_text='Type of archive item', max_length=20)),
                ('estimated_age', models.CharField(blank=True, help_text="Estimated age or time period (e.g., '18th century', '200 years old')", max_length=100)),
                ('historical_period', models.CharField(blank=True, help_text='Historical period or dynasty', max_length=100)),
                ('cultural_significance', models.TextField(blank=True, help_text='Description of cultural and religious significance')),
                ('material', models.CharField(choices=[('paper', 'Paper'), ('parchment', 'Parchment'), ('palm_leaf', 'Palm Leaf'), ('wood', 'Wood'), ('metal', 'Metal'), ('stone', 'Stone'), ('textile', 'Textile'), ('clay', 'Clay'), ('bone', 'Bone'), ('mixed', 'Mixed Materials'), ('unknown', 'Unknown')], default='unknown', help_text='Primary material of the item', max_length=20)),
                ('dimensions', models.CharField(blank=True, help_text="Physical dimensions (e.g., '30cm x 20cm x 5cm')", max_length=100)),
                ('weight', models.CharField(blank=True, help_text='Weight of the item', max_length=50)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical')], default='good', help_text='Current condition of the item', max_length=20)),
                ('image', models.ImageField(help_text='Main image of the archive item', upload_to='archives/images/')),
                ('image_alt', models.CharField(help_text='Alt text for the main image (accessibility)', max_length=200)),
                ('additional_images', models.JSONField(blank=True, default=list, help_text='List of additional image URLs')),
                ('scan', models.FileField(blank=True, help_text='High-resolution scan or document file', upload_to='archives/scans/')),
                ('scan_resolution', models.CharField(blank=True, help_text="Resolution of the scan (e.g., '300 DPI')", max_length=50)),
                ('catalog_number', models.CharField(help_text='Unique catalog/inventory number', max_length=50, unique=True)),
                ('acquisition_date', models.DateField(blank=True, help_text='Date when item was acquired by the monastery', null=True)),
                ('acquisition_method', models.CharField(blank=True, help_text='How the item was acquired (donated, purchased, etc.)', max_length=100)),
                ('language', models.CharField(blank=True, help_text='Primary language (for manuscripts)', max_length=50)),
                ('script', models.CharField(blank=True, help_text='Script or writing system', max_length=50)),
                ('is_public', models.BooleanField(default=True, help_text='Whether this item can be publicly viewed')),
                ('requires_special_handling', models.BooleanField(default=False, help_text='Whether item requires special preservation conditions')),
                ('preservation_notes', models.TextField(blank=True, help_text='Notes about preservation requirements and history')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times this item has been viewed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('monastery', models.ForeignKey(help_text='The monastery this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='archive_items', to='core.monastery')),
            ],
            options={
                'ordering': ['monastery', 'catalog_number'],
                'indexes': [models.Index(fields=['item_type'], name='archives_ar_item_ty_8e3914_idx'), models.Index(fields=['material'], name='archives_ar_materia_f4add0_idx'), models.Index(fields=['is_public'], name='archives_ar_is_publ_04f651_idx')],
            },
        ),
    ]
