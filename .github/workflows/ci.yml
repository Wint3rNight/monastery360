name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: monastery360_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config gdal-bin libgdal-dev libproj-dev libgeos-dev proj-bin python3-gdal

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Some binary packages (GDAL) require numpy available during install; preinstall it.
          python -m pip install numpy
          # Avoid building GDAL from source inside the runner's python environment.
          # We installed the system package `python3-gdal` above; prevent pip from trying
          # to build/install the GDAL wheel by creating a requirements file that excludes it.
          grep -i -v '^gdal' requirements.txt > requirements_no_gdal.txt || true
          pip install --prefer-binary -r requirements_no_gdal.txt

      - name: Run linting
        run: |
          flake8 .

      - name: Run tests
        env:
          DATABASE_URL: postgis://postgres:postgres@localhost:5432/monastery360_test
          SECRET_KEY: test-secret-key
          DEBUG: True
        run: |
          python manage.py collectstatic --noinput
          python manage.py migrate
          python manage.py test

      - name: Check migrations
        env:
          DATABASE_URL: postgis://postgres:postgres@localhost:5432/monastery360_test
          SECRET_KEY: test-secret-key
        run: |
          python manage.py makemigrations --check --dry-run
